CONTRACT_TYPE
{
  name = CP1_7_3
  title = CP1.7.3 - More precise orbit
  group = CP1
  sortKey = CP1_7_3
  agent = SpaceK_CP1
  
  description = Oke that was easier, but it was still difficult to control the shape of the orbit. At the moment we achieved orbit, there was still fuel left and the rocket could not be stopped. Therefore, the rocket overshot a circular orbit.
  
  // Optional
  notes = Use the new liquid fuel engine to achieve a (near) circular orbit around Kerbin. Note: You need to control the thrust of the engine, check your key-mapping, but probably it's controlled by the left-shift and left-control keys.

  // The contract synopsis appears in bold.
  synopsis = Achieve a nice circular orbit around Kerbin.

  completedMessage = Congratulations, what a nice circular orbit!

  // Contract min/max expiry in days.  If both are set to 0.0, it will result in a contract that never expires.
  // Default = 5.0 and 100.0 days, respectively
  minExpiry = 0.0
  maxExpiry = 0.0
  // Contract deadline in days.  Default is no deadline.
  deadline = 10

  // Controls for whether a contract can be declined or cancelled, default is true for both
  cancellable = false
  declinable = false

  // Prestige.
  //     Trivial
  //     Significant
  //     Exceptional
  prestige = Trivial

  // Target Celestial body
  // Default = null (no celestial body)
  targetBody = Kerbin

  // The maximum number of times this contract type can be completed (0 being unlimited).
  // Default = 0
  maxCompletions = 1

  // The maximum instances of this contract that can be active at one time. Default = 4 (unless maxCompletions is set).
  maxSimultaneous = 1

  // Contract rewards.  Note that advanceFunds are automatically added to the failureFunds.
  rewardScience = 3.0
  rewardReputation = 3.0
  rewardFunds = 5000.0
  failureReputation = 1.0
  failureFunds = 0.0
  advanceFunds = 5000.0

  PARAMETER
  {
    name = group_alt_part
    type = VesselParameterGroup
    duration = 1m
    define = vessel_CP1_7_3
    defineList = vessel_garbage_list
    hideVesselName = true
    
    PARAMETER
    {
      name = need_part
      type = PartValidation
      // specific part micro or tiny LFO engine
      part = RC_MicroEngine_36_K1
      part = RC_TinyEngine_48_5S
    }
    PARAMETER
    {
      name = get_orbit
      type = Orbit
      situation  = ORBITING
      minAltitude = 70000
      maxAltitude = 80000
      disableOnStateChange = true //  Remove when achieved
      completeInSequence = true // first reach orbit
    }
  }
  REQUIREMENT
  {
    name = completed_cp1_7_2
    type = CompleteContract
    contractType = CP1_7_2
  }
}