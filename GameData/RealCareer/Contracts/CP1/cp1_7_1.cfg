CONTRACT_TYPE
{
  name = CP1_7_1
  title = CP1.7.1 - Orbit
  group = CP1
  sortKey = CP1_018
  agent = SpaceK_CP1
  
  description = Now it is time to send our first rocket into orbit. This won't be easy! But if you succeed your boss Kelon Tusk will be very pleased.
  
  // Optional
  notes = Make a multi-staged rocket that is able to reach orbit. Note: This contract is a step up in complexity, because you'll need to experiment with the design of your rocket. You'll also notice (or already have) that lower stages are less effective and that adding more and more rockets also add less and less delta-v. So you'll have to find the right combination. Lastly, REALLY check what is needed to orbit! Side-note: if the countdown doesn't start when in orbit, go back to the space center/tracking station and then switch again to the vessel. This should trigger the countdown.

  // The contract synopsis appears in bold.
  synopsis = Get your rocket into orbit.

  completedMessage = Congratulations, we finally got a rocket into orbit. Now we can proudly call ourselves a space agency!

  // Contract min/max expiry in days.  If both are set to 0.0, it will result in a contract that never expires.
  // Default = 5.0 and 100.0 days, respectively
  minExpiry = 0.0
  maxExpiry = 0.0
  // Contract deadline in days.  Default is no deadline.
  deadline = 10

  // Controls for whether a contract can be declined or cancelled, default is true for both
  cancellable = false
  declinable = false

  // Prestige.
  //     Trivial
  //     Significant -> reward x1.25
  //     Exceptional -> reward x1.5
  prestige = Exceptional

  // Target Celestial body
  // Default = null (no celestial body)
  targetBody = Kerbin

  // The maximum number of times this contract type can be completed (0 being unlimited).
  // Default = 0
  maxCompletions = 1

  // The maximum instances of this contract that can be active at one time. Default = 4 (unless maxCompletions is set).
  maxSimultaneous = 1

  // Contract rewards.  Note that advanceFunds are automatically added to the failureFunds.
  rewardScience = 10.0
  rewardReputation = 10.0
  rewardFunds = 10000.0
  failureReputation = 1.0
  failureFunds = 0.0
  advanceFunds = 5000.0

  PARAMETER
  {
    name = group_alt_part
    type = VesselParameterGroup
    duration = 1m
    define = vessel_CP1_7_1
    defineList = vessel_garbage_list
    hideVesselName = true
    
    PARAMETER
    {
      name = reach_alt
      type = ReachState
      minAltitude = 70000
      disableOnStateChange = true //  Remove when achieved
    }
    PARAMETER
    {
      name = need_gyro_v1
      type = PartValidation
      // specific part: Mini inline gyro (0.35m)
      part = RC_InlineGyro_035_G2
      disableOnStateChange = true //  Remove when achieved
      completeInSequence = true // first reach altitude
    }
    PARAMETER
    {
      name = reach_orbit
      type = ReachState
      situation  = ORBITING
      minAltitude = 70000
      disableOnStateChange = true //  Remove when achieved
    }
  }
  PARAMETER
  {
    name = have_2000dv_at_launch
    type = ReachState
    minDeltaVeeActual  = 3300 
    maxDeltaVeeActual  = 4000 
    situation = PRELAUNCH
    disableOnStateChange = true //  Remove when achieved
  }
  REQUIREMENT
  {
    name = completed_cp1_5_3
    type = CompleteContract
    contractType = CP1_5_3
  }
}