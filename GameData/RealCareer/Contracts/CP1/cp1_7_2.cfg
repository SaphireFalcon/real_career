CONTRACT_TYPE
{
  name = CP1_7_2
  title = CP1.7.2 - Easier orbit
  group = CP1
  sortKey = CP1_7_2
  agent = SpaceK_CP1
  
  description = Wow, we got a rocket into orbit. Your boss is very impressed. But we noticed that adding more rockets wasn't very effective. Therefore, you had your scientists look into this and find a way to make your rockets more effective. They told you two things. One, you'd need bigger rockets. Two, you would need rocket engines that have a higher efficiency. Together with your engineers they have build a whole new set of rockets that are bigger and have a higher efficiency.
  
  // Optional
  notes = Use the new rockets to launch a second rocket into orbit. Note: You might have noticed, but the efficiency of a rocket is described by the value 'ISP'. The 3rd generation of rockets that we now have, has a better ISP and we get more delta-v with the same amount of fuel.

  // The contract synopsis appears in bold.
  synopsis = Get your rocket into orbit

  completedMessage = Congratulations, that required less rockets, though did you have stability issues? This is generally a problem, because one would want to make a gravity turn (look it up) which requires a stable rocket.

  // Contract min/max expiry in days.  If both are set to 0.0, it will result in a contract that never expires.
  // Default = 5.0 and 100.0 days, respectively
  minExpiry = 0.0
  maxExpiry = 0.0
  // Contract deadline in days.  Default is no deadline.
  deadline = 10

  // Controls for whether a contract can be declined or cancelled, default is true for both
  cancellable = false
  declinable = false

  // Prestige.
  //     Trivial
  //     Significant
  //     Exceptional
  prestige = Trivial

  // Target Celestial body
  // Default = null (no celestial body)
  targetBody = Kerbin

  // The maximum number of times this contract type can be completed (0 being unlimited).
  // Default = 0
  maxCompletions = 1

  // The maximum instances of this contract that can be active at one time. Default = 4 (unless maxCompletions is set).
  maxSimultaneous = 1

  // Contract rewards.  Note that advanceFunds are automatically added to the failureFunds.
  rewardScience = 3.0
  rewardReputation = 3.0
  rewardFunds = 5000.0
  failureReputation = 1.0
  failureFunds = 0.0
  advanceFunds = 5000.0

  PARAMETER
  {
    name = group_alt_part
    type = VesselParameterGroup
    duration = 1m
    define = vessel_CP1_7_2
    defineList = vessel_garbage_list
    hideVesselName = true
    
    PARAMETER
    {
      name = reach_orbit
      type = ReachState
      situation  = ORBITING
      minAltitude = 70000
      disableOnStateChange = true //  Remove when achieved
    }
    PARAMETER
    {
      name = no_part
      type = Not
      
      PARAMETER
      {
        name = need_part
        type = PartValidation
      // specific part micro or tiny LFO engine
        part = RC_MicroEngine_36_K1
        part = RC_TinyEngine_48_5S
        disableOnStateChange = false //  Need to keep it until the end
        completeInSequence = true // first reach orbit
      }
    }
  }
  REQUIREMENT
  {
    name = completed_cp1_7_1
    type = CompleteContract
    contractType = CP1_7_1
  }
  REQUIREMENT
  {
    name = tech_researched
    type = TechResearched
    tech = tinyRocketry
  }
}