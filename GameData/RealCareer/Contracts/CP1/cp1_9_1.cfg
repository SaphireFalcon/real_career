CONTRACT_TYPE
{
  name = CP1_9_1
  title = CP1.9.1 - Orbit & return
  group = CP1
  sortKey = CP1_027
  agent = SpaceK_CP1
  
  description = Wow, we got a rocket into orbit. Your boss is very impressed, but he also says that if we want to send kerbonauts into space, we need to be able to return the rocket safely back to Kerbin.

  // Optional
  notes = Return safely from orbit. You might have noticed, and otherwise go to a rocket in orbit via the Space Center, but a rocket in orbit has a speed above 2000m/s. We've seen in previous launches (CP1.2.3) that parts (like the nose cone) can explode when going too fast. So, we need either make the rocket able to resist higher temperature, shield it from the heat, or make it go slower. Note: As explained, building rockets will become harder. For this contract you'll have to decide what solution to use and maybe research a few things before you can achieve it.

  // The contract synopsis appears in bold.
  synopsis = Get your rocket into orbit and back safely.

  completedMessage = Congratulations, we finally got a rocket into orbit and made it back safely. Now you could send kerbonauts into space, but also run experiments that need to return to Kerbin.

  // Contract min/max expiry in days.  If both are set to 0.0, it will result in a contract that never expires.
  // Default = 5.0 and 100.0 days, respectively
  minExpiry = 0.0
  maxExpiry = 0.0
  // Contract deadline in days.  Default is no deadline.
  deadline = 10

  // Controls for whether a contract can be declined or cancelled, default is true for both
  cancellable = false
  declinable = false

  // Prestige.
  //     Trivial
  //     Significant
  //     Exceptional
  prestige = Exceptional

  // Target Celestial body
  // Default = null (no celestial body)
  targetBody = Kerbin

  // The maximum number of times this contract type can be completed (0 being unlimited).
  // Default = 0
  maxCompletions = 1

  // The maximum instances of this contract that can be active at one time. Default = 4 (unless maxCompletions is set).
  maxSimultaneous = 1

  // Contract rewards.  Note that advanceFunds are automatically added to the failureFunds.
  rewardScience = 10.0
  rewardReputation = 10.0
  rewardFunds = 15000.0
  failureReputation = 1.0
  failureFunds = 0.0
  advanceFunds = 5000.0

  PARAMETER
  {
    name = reach_alt
    type = ReachState
    minAltitude = 70000
    disableOnStateChange = true //  Remove when achieved
  }
  
  PARAMETER
  {
    name = group_alt_part
    type = VesselParameterGroup
    duration = 5m
    define = vessel_CP1_9_1
    defineList = vessel_garbage_list
    hideVesselName = true
    
    PARAMETER
    {
      name = get_orbit
      type = Orbit
      situation  = ORBITING
      minAltitude = 70000
      maxAltitude = 80000
      disableOnStateChange = true //  Remove when achieved
    }
  }
  PARAMETER
  {
    name = reach_return_safely
    type = ReachState
    situation  = LANDED
    situation  = SPLASHED
    disableOnStateChange = true //  Remove when achieved
  }
  REQUIREMENT
  {
    name = completed_cp1_8_2
    type = CompleteContract
    contractType = CP1_8_2
  }
  REQUIREMENT
  {
    name = tech_researched
    type = TechResearched
    tech = survivability
  }
}