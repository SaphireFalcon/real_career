CONTRACT_TYPE
{
  name = CP1_1_3
  title = CP1.1.3 - Drag
  group = CP1
  sortKey = CP1_003
  agent = SpaceK_CP1
  
  description = On the party to celebrate the successful launch of your first rocket you and your engineers discussed about the fact that the rocket didn't get very far. One of them, John Kayleigh, remarked that he had an idea and that he needed all the party hats after the party.
  
  // Optional
  notes = John Kayleigh says that with a more streamlined design you can reduce the drag of the rocket and you should be able to reach a much higher altitude. Use the party hat, correction the nose cone, to achieve a higher altitude.

  // The contract synopsis appears in bold.
  synopsis = Streamline your rocket!

  completedMessage = Congratulations! Those party hats did come handy! This also means that drag is an important factor in launching rockets.

  // Contract min/max expiry in days.  If both are set to 0.0, it will result in a contract that never expires.
  // Default = 5.0 and 100.0 days, respectively
  minExpiry = 0.0
  maxExpiry = 0.0
  // Contract deadline in days.  Default is no deadline.
  deadline = 10

  // Controls for whether a contract can be declined or cancelled, default is true for both
  cancellable = false
  declinable = false

  // Prestige.
  //     Trivial
  //     Significant
  //     Exceptional
  prestige = Trivial

  // Target Celestial body
  // Default = null (no celestial body)
  targetBody = Kerbin

  // The maximum number of times this contract type can be completed (0 being unlimited).
  // Default = 0
  maxCompletions = 1

  // The maximum instances of this contract that can be active at one time. Default = 4 (unless maxCompletions is set).
  maxSimultaneous = 1

  // Contract rewards.  Note that advanceFunds are automatically added to the failureFunds.
  rewardScience = 2.0
  rewardReputation = 1.0
  rewardFunds = 1000.0
  failureReputation = 1.0
  failureFunds = 0.0
  advanceFunds = 500.0

  //  Completion criteria
  PARAMETER
  {
    name = reach_alt
    type = ReachState
    minAltitude = 5000
    disableOnStateChange = true //  Remove when achieved
  }
  PARAMETER
  {
    name = min_speed
    type = ReachState
    minSpeed = 300
    disableOnStateChange = true //  Remove when achieved
  }
  PARAMETER
  {
    name = need_nosecone
    type = PartValidation
    disableOnStateChange = false //  Need to keep it until the end

    //  specific part: the nose cone
    part = RC_NoseCone_035_G1
  }
  REQUIREMENT
  {
    name = completed_cp1_1_2
    type = CompleteContract
    contractType = CP1_1_2
  }
}