CONTRACT_TYPE
{
  name = CP1_3_3
  title = CP1 - Safe return from space
  group = CP1
  sortKey = CP1_3_3
  agent = SpaceK_CP1
  
  description = Oke, it was harder from that height. From a certain altitude de parachute doesn't work at all. Can we land then from space?
  
  // Optional
  notes = Make sure that the parachute can open earlier, such that the rocket can come down safely from space.

  // The contract synopsis appears in bold.
  synopsis = Make the rocket return intact.

  completedMessage = Congratulations, now we just have to refuel the rocket and we can go again! Did you see that? What goes up fast, also comes down fast! Luckily, the parachute could handle those speeds!

  // Contract min/max expiry in days.  If both are set to 0.0, it will result in a contract that never expires.
  // Default = 5.0 and 100.0 days, respectively
  minExpiry = 0.0
  maxExpiry = 0.0
  // Contract deadline in days.  Default is no deadline.
  deadline = 10

  // Controls for whether a contract can be declined or cancelled, default is true for both
  cancellable = false
  declinable = false

  // Prestige.
  //     Trivial
  //     Significant
  //     Exceptional
  prestige = Trivial

  // Target Celestial body
  // Default = null (no celestial body)
  targetBody = Kerbin

  // The maximum number of times this contract type can be completed (0 being unlimited).
  // Default = 0
  maxCompletions = 1

  // The maximum instances of this contract that can be active at one time. Default = 4 (unless maxCompletions is set).
  maxSimultaneous = 1

  // Contract rewards.  Note that advanceFunds are automatically added to the failureFunds.
  rewardScience = 2.0
  rewardReputation = 1.0
  rewardFunds = 1000.0
  failureReputation = 1.0
  failureFunds = 0.0
  advanceFunds = 1000.0

  //  Completion criteria
  PARAMETER
  {
    name = reach_alt
    type = ReachState
    minAltitude = 70000
    disableOnStateChange = true //  Remove when achieved
  }
  PARAMETER
  {
    name = landed_with_parts
    type = VesselParameterGroup
    
    PARAMETER
    {
      name = need_chute
      type = PartValidation
      // specific part: nose probe chute
      part = RC_Noseprobeshute_35
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER
    {
      name = need_rocket
      type = PartValidation
      // specific part: L micro rocket
      part = RC_Rocket_35_L1
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER
    {
      name = reach_landed
      type = ReachState
      targetBody = Kerbin
      situation = LANDED
      situation = SPLASHED
    }
  }
  REQUIREMENT
  {
    name = completed_cp1_2_3
    type = CompleteContract
    contractType = CP1_2_3
  }
  REQUIREMENT
  {
    name = completed_cp1_3_2
    type = CompleteContract
    contractType = CP1_3_2
  }
}