CONTRACT_TYPE
{
  name = CP2_1_2_skyfy
  title = CP2.1.2 - SkyFy Satelite TV
  group = CP2
  sortKey = CP2_1_2
  agent = SkyFy //[ Kisney, KBO, SkyFy ].Random()
  
  description = The SkyFy TV station is very impressed with your satellite. Their customers report very good service and higher image quality compared to other TV channels that are still broadcasted by land antenna's. Therefore, they want you to cover a larger area. Therefore, they have selected a few key areas they want you to cover.

  // Optional
  notes = The client wants you to cover a larger area. Unfortunately, there is no dish that can cover a higher surface area while maintaining the high bandwidth needed for TV transmissions. You should find another solution to this. Note: Make sure that you have enough science to unlock the required research or first gather more science.

  // The contract synopsis appears in bold.
  synopsis = Launch one or more satellite(s) that can transmit the tv channels of the tv station to multiple locations.

  completedMessage = Congratulations, now all those bench watchers can continue enjoying their favourite TV shows.

  // Contract min/max expiry in days.  If both are set to 0.0, it will result in a contract that never expires.
  // Default = 5.0 and 100.0 days, respectively
  minExpiry = 0.0
  maxExpiry = 0.0
  // Contract deadline in days.  Default is no deadline.
  deadline = 15

  // Controls for whether a contract can be declined or cancelled, default is true for both
  cancellable = false
  declinable = false

  // Prestige.
  //     Trivial
  //     Significant
  //     Exceptional
  prestige = Trivial

  // Target Celestial body
  // Default = null (no celestial body)
  targetBody = Kerbin

  // The maximum number of times this contract type can be completed (0 being unlimited).
  // Default = 0
  maxCompletions = 1
  //  ToDo: figure out how to make sure this contract is not non-stop repeated

  // The maximum instances of this contract that can be active at one time. Default = 4 (unless maxCompletions is set).
  maxSimultaneous = 1

  // Contract rewards.  Note that advanceFunds are automatically added to the failureFunds.
  rewardScience = 0.0
  rewardReputation = 10.0
  rewardFunds = 130000.0
  failureReputation = 20.0
  failureFunds = 0.0
  advanceFunds = 20000.0
  
  //  Spawn TV station
  BEHAVIOUR
  {
    name = SpawnVessel
    type = SpawnVessel
    deferVesselCreation = true
    VESSEL
    {
      name = SkyFy TV Receiver 4
      craftURL = RealCareer/Vessels/CP2_1_1_TV_station.craft
      flagURL = Squad/Flags/default
      vesselType = Base // Unknown
      owned = true // selectable/flyable unless docked -> You need to target the satellite
      targetBody = Kerbin
      lat = 18.8
      lon = 18.2
    }
    VESSEL
    {
      name = SkyFy TV Receiver 5
      craftURL = RealCareer/Vessels/CP2_1_1_TV_station.craft
      flagURL = Squad/Flags/default
      vesselType = Base // Unknown
      owned = true // selectable/flyable unless docked -> You need to target the satellite
      targetBody = Kerbin
      lat = 12.667
      lon = 18.2
    }
    VESSEL
    {
      name = SkyFy TV Receiver 6
      craftURL = RealCareer/Vessels/CP2_1_1_TV_station.craft
      flagURL = Squad/Flags/default
      vesselType = Base // Unknown
      owned = true // selectable/flyable unless docked -> You need to target the satellite
      targetBody = Kerbin
      lat = -16.4
      lon = 20.4
    }
    VESSEL
    {
      name = SkyFy TV Receiver 7
      craftURL = RealCareer/Vessels/CP2_1_1_TV_station.craft
      flagURL = Squad/Flags/default
      vesselType = Base // Unknown
      owned = true // selectable/flyable unless docked -> You need to target the satellite
      targetBody = Kerbin
      lat = -16.50
      lon = 24.50
    }
    VESSEL
    {
      name = SkyFy TV Receiver 8
      craftURL = RealCareer/Vessels/CP2_1_1_TV_station.craft
      flagURL = Squad/Flags/default
      vesselType = Base // Unknown
      owned = true // selectable/flyable unless docked -> You need to target the satellite
      targetBody = Kerbin
      lat = -23.667
      lon = 10.25
    }
    VESSEL
    {
      name = SkyFy TV Receiver 9
      craftURL = RealCareer/Vessels/CP2_1_1_TV_station.craft
      flagURL = Squad/Flags/default
      vesselType = Base // Unknown
      owned = true // selectable/flyable unless docked -> You need to target the satellite
      targetBody = Kerbin
      lat = -24.883
      lon = 16.667
    }
    VESSEL
    {
      name = SkyFy TV Receiver 10
      craftURL = RealCareer/Vessels/CP2_1_1_TV_station.craft
      flagURL = Squad/Flags/default
      vesselType = Base // Unknown
      owned = true // selectable/flyable unless docked -> You need to target the satellite
      targetBody = Kerbin
      lat = -24.417
      lon = 21.417
    }
    VESSEL
    {
      name = SkyFy TV Receiver 11
      craftURL = RealCareer/Vessels/CP2_1_1_TV_station.craft
      flagURL = Squad/Flags/default
      vesselType = Base // Unknown
      owned = true // selectable/flyable unless docked -> You need to target the satellite
      targetBody = Kerbin
      lat = -22.667
      lon = 23.18
    }
  }
  PARAMETER
  {
    name = group_alt_part
    type = VesselParameterGroup
    duration = 6h
    define = vessel_CP2_1_2_TV_satellite
    dissassociateVesselsOnContractCompletion = false // The license contract should be able to find it again
    dissassociateVesselsOnContractFailure = true
    //dissassociateVesselsOnContractCompletion = true
    //dissassociateVesselsOnContractFailure = true
    //hideVesselName = true
    
    PARAMETER
    {
      name = need_part
      type = PartValidation
      part = RTLongDish1
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_tv_station
      type = VesselConnectivity
      vessel = SkyFy TV Station
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_receiver_4
      type = VesselConnectivity
      vessel = SkyFy TV Receiver 4
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_receiver_5
      type = VesselConnectivity
      vessel = SkyFy TV Receiver 5
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_receiver_6
      type = VesselConnectivity
      vessel = SkyFy TV Receiver 6
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_receiver_7
      type = VesselConnectivity
      vessel = SkyFy TV Receiver 7
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_receiver_8
      type = VesselConnectivity
      vessel = SkyFy TV Receiver 8
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_receiver_9
      type = VesselConnectivity
      vessel = SkyFy TV Receiver 9
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_receiver_10
      type = VesselConnectivity
      vessel = SkyFy TV Receiver 10
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_receiver_11
      type = VesselConnectivity
      vessel = SkyFy TV Receiver 11
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
  }
  
  REQUIREMENT
  {
    name = completed_CP2_1_1_skyfy
    type = CompleteContract
    contractType = CP2_1_1_skyfy
  }
  REQUIREMENT
  {
    name = completed_CP2_2_2
    type = CompleteContract
    contractType = CP2_2_2
  }
}
