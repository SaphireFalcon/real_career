CONTRACT_TYPE
{
  name = CP2_2_1_licence
  title = CP2.2.1 - Long-Range LKO ComSat Licence
  group = CP2
  sortKey = CP2_2_1_licence
  agent = SpaceK_CP2
  
  description = A year ago we created the next-gen LKO ComSats. Other agencies have happily been using our communication network. Now they have to pay up again. 
  
  // Optional
  notes = Note: To get the yearly licence fee, make sure that the satellite still work fine by switching to them.

  // The contract synopsis appears in bold.
  synopsis = Get payed your yearly licence fee.

  completedMessage = Congratulations, now we'll have communication to higher orbits.

  // Contract min/max expiry in days. If both are set to 0.0, it will result in a contract that never expires.
  // Default = 5.0 and 100.0 days, respectively
  minExpiry = 0.0
  maxExpiry = 0.0
  // Contract deadline in days.  Default is no deadline.
  deadline = 10

  // Controls for whether a contract can be declined or cancelled, default is true for both
  cancellable = false
  declinable = false

  // Prestige.
  //     Trivial
  //     Significant
  //     Exceptional
  prestige = Trivial

  // Target Celestial body
  // Default = null (no celestial body)
  targetBody = Kerbin

  // The maximum number of times this contract type can be completed (0 being unlimited).
  // Default = 0
  maxCompletions = 1

  // The maximum instances of this contract that can be active at one time. Default = 4 (unless maxCompletions is set).
  maxSimultaneous = 1

  // Contract rewards.  Note that advanceFunds are automatically added to the failureFunds.
  rewardScience = 0.0
  rewardReputation = 5.0
  rewardFunds = 50000.0
  failureReputation = 10.0
  failureFunds = 0.0
  advanceFunds = 0.0

  PARAMETER
  {
    name = group_com_1
    type = VesselParameterGroup
    duration = 1d
    hideVesselName = false
    vessel = vessel_CP2_2_1_1
    
    PARAMETER
    {
      name = not_vessel
      type = IsNotVessel
      vessel = vessel_CP2_2_1_2
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_sat_2
      type = VesselConnectivity
      vessel = vessel_CP2_2_1_2
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER
    {
      name = not_vessel
      type = IsNotVessel
      vessel = vessel_CP2_2_1_3
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_sat_3
      type = VesselConnectivity
      vessel = vessel_CP2_2_1_3
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
  }
  PARAMETER
  {
    name = group_com_2
    type = VesselParameterGroup
    duration = 1d
    hideVesselName = false
    vessel = vessel_CP2_2_1_2
    
    PARAMETER
    {
      name = not_vessel
      type = IsNotVessel
      vessel = vessel_CP2_2_1_1
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_sat_1
      type = VesselConnectivity
      vessel = vessel_CP2_2_1_1
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER
    {
      name = not_vessel
      type = IsNotVessel
      vessel = vessel_CP2_2_1_3
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_sat_3
      type = VesselConnectivity
      vessel = vessel_CP2_2_1_3
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
  }
  PARAMETER
  {
    name = group_com_3
    type = VesselParameterGroup
    duration = 1d
    hideVesselName = false
    vessel = vessel_CP2_2_1_3
    
    PARAMETER
    {
      name = not_vessel
      type = IsNotVessel
      vessel = vessel_CP2_2_1_2
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_sat_2
      type = VesselConnectivity
      vessel = vessel_CP2_2_1_2
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER
    {
      name = not_vessel
      type = IsNotVessel
      vessel = vessel_CP2_2_1_1
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_sat_1
      type = VesselConnectivity
      vessel = vessel_CP2_2_1_1
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
  }
  
  REQUIREMENT
  {
    name = completed_cp2_2_1
    type = CompleteContract
    contractType = CP2_2_1
    cooldownDuration = 1y
  }
   
  REQUIREMENT
  {
    name = completed_cp2_2_1_licence
    type = CompleteContract
    contractType = CP2_2_1_licence
    minCount = 0
    cooldownDuration = 1y
  }
}