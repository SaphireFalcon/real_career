CONTRACT_TYPE
{
  name = CP2_1_2_skyfy_licence
  title = CP2.1.2 - Satelite TV Licence
  group = CP2
  sortKey = CP2_1_2_skyfy_licence
  agent = SkyFy //[ Kisney, KBO, SkyFy ].Random()
  
  description = Last year you launched a satellite for the SkyFy TV station to broadcast their channels over a satellite. They are very content with the service and will hapily pay the yearly fee. 

  // Optional
  notes = Note: To get the yearly licence fee, make sure that the satellite still covers the TV station and receivers correctly.

  // The contract synopsis appears in bold.
  synopsis = Get payed your yearly licence fee.

  completedMessage = Congratulations, we that is one usefull little satellite, we get rich sleeping...

  // Contract min/max expiry in days.  If both are set to 0.0, it will result in a contract that never expires.
  // Default = 5.0 and 100.0 days, respectively
  minExpiry = 200.0
  maxExpiry = 400.0
  // Contract deadline in days.  Default is no deadline.
  deadline = 2

  // Controls for whether a contract can be declined or cancelled, default is true for both
  cancellable = false
  declinable = false

  // Prestige.
  //     Trivial
  //     Significant
  //     Exceptional
  prestige = Trivial

  // Target Celestial body
  // Default = null (no celestial body)
  targetBody = Kerbin

  // The maximum number of times this contract type can be completed (0 being unlimited).
  // Default = 0
  //maxCompletions = 1
  //  ToDo: Make it repeatable or make multiple contract copies
  //  ToDo: figure out how to make sure this contract is not non-stop repeated

  // The maximum instances of this contract that can be active at one time. Default = 4 (unless maxCompletions is set).
  maxSimultaneous = 1

  // Contract rewards.  Note that advanceFunds are automatically added to the failureFunds.
  rewardScience = 0.0
  rewardReputation = 5.0
  rewardFunds = 25000.0
  failureReputation = 10.0
  failureFunds = 0.0
  advanceFunds = 0.0
  
  PARAMETER
  {
    name = group_alt_part
    type = VesselParameterGroup
    duration = 6h
    define = vessel_CP2_1_2_TV_satellite
    dissassociateVesselsOnContractCompletion = false // The license contract should be able to find it again
    dissassociateVesselsOnContractFailure = true
    //dissassociateVesselsOnContractCompletion = true
    //dissassociateVesselsOnContractFailure = true
    //hideVesselName = true
    
    PARAMETER
    {
      name = need_part
      type = PartValidation
      part = RTLongDish1
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_tv_station
      type = VesselConnectivity
      vessel = SkyFy TV Station
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_receiver_4
      type = VesselConnectivity
      vessel = SkyFy TV Receiver 4
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_receiver_5
      type = VesselConnectivity
      vessel = SkyFy TV Receiver 5
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_receiver_6
      type = VesselConnectivity
      vessel = SkyFy TV Receiver 6
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_receiver_7
      type = VesselConnectivity
      vessel = SkyFy TV Receiver 7
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_receiver_8
      type = VesselConnectivity
      vessel = SkyFy TV Receiver 8
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_receiver_9
      type = VesselConnectivity
      vessel = SkyFy TV Receiver 9
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_receiver_10
      type = VesselConnectivity
      vessel = SkyFy TV Receiver 10
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_receiver_11
      type = VesselConnectivity
      vessel = SkyFy TV Receiver 11
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
  }
  
  REQUIREMENT
  {
    name = AtMost
    type = AtMost

    // Maximum number of requirements that can match.
    count = 1

    REQUIREMENT
    {
      name = completed_cp2_1_4_skyfy
      type = CompleteContract
      contractType = CP2_1_4_skyfy
    }
    REQUIREMENT
    {
      name = completed_cp2_1_2_skyfy
      type = CompleteContract
      contractType = CP2_1_2_skyfy
    }
  }
  
  REQUIREMENT
  {
    name = completed_cp2_1_2_skyfy
    type = CompleteContract
    contractType = CP2_1_2_skyfy
    cooldownDuration = 1y
  }
   
  REQUIREMENT
  {
    name = completed_cp2_1_2_skyfy_licence
    type = CompleteContract
    contractType = CP2_1_2_skyfy_licence
    minCount = 0
    cooldownDuration = 1y
  }
}
