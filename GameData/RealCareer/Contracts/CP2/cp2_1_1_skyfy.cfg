CONTRACT_TYPE
{
  name = CP2_1_1_skyfy
  title = CP2.1.1 - SkyFy Satelite TV
  group = CP2
  sortKey = CP2_1_1_skyfy
  agent = SkyFy //[ Kisney, KBO, SkyFy ].Random()
  
  description = The commercial department approached you with a request from SkyFy a science fiction tv station. They want to reach a wider audience, but some of them live in a mountainous area, thus normal TV antenna's are not as effective. When they heard about your space agency, they approached us with their problem. Maybe you can find a scientific solution to their problem.

  // Optional
  notes = Since the client only wants to target a small target area. The best solution would be to launch a satellite in Kerbin Stable Orbit (KSO). This is an orbit where the orbital period is equal to the sideral rotation period of Kerbin (The time it takes Kerbin to rotate once around its own axis). Note: To get the connection of a dish working, you need to target an object or vessel. Make sure the receivers target the satellite and the satellite targets one of them such they are all covered.

  // The contract synopsis appears in bold.
  synopsis = Launch a satellite with a dish that can transmit the tv channels of the tv station.

  completedMessage = Congratulations, now all those bench watchers can continue enjoying their favourite TV shows.

  // Contract min/max expiry in days. If both are set to 0.0, it will result in a contract that never expires.
  // Default = 5.0 and 100.0 days, respectively
  minExpiry = 0.0
  maxExpiry = 0.0
  // Contract deadline in days.  Default is no deadline.
  deadline = 10

  // Controls for whether a contract can be declined or cancelled, default is true for both
  cancellable = false
  declinable = false

  // Prestige.
  //     Trivial
  //     Significant
  //     Exceptional
  prestige = Trivial

  // Target Celestial body
  // Default = null (no celestial body)
  targetBody = Kerbin

  // The maximum number of times this contract type can be completed (0 being unlimited).
  // Default = 0
  maxCompletions = 1
  //  ToDo: Make it repeatable or make multiple contract copies
  //  ToDo: figure out how to make sure this contract is not non-stop repeated

  // The maximum instances of this contract that can be active at one time. Default = 4 (unless maxCompletions is set).
  maxSimultaneous = 1

  // Contract rewards.  Note that advanceFunds are automatically added to the failureFunds.
  rewardScience = 0.0
  rewardReputation = 5.0
  rewardFunds = 80000.0
  failureReputation = 10.0
  failureFunds = 0.0
  advanceFunds = 20000.0
  
  //  Spawn TV station
  BEHAVIOUR
  {
    name = SpawnVessel
    type = SpawnVessel
    deferVesselCreation = true
    VESSEL
    {
      name = SkyFy TV Station
      craftURL = RealCareer/Vessels/CP2_1_1_TV_station.craft
      flagURL = Squad/Flags/default
      vesselType = Base // Unknown
      owned = true // selectable/flyable unless docked -> You need to target the satellite
      targetBody = Kerbin
      lat = -2.18667
      lon = 18.20
      //alt = 65.2
    }
    VESSEL
    {
      name = SkyFy TV Receiver 1
      craftURL = RealCareer/Vessels/CP2_1_1_TV_station.craft
      flagURL = Squad/Flags/default
      vesselType = Base // Unknown
      owned = true // selectable/flyable unless docked -> You need to target the satellite
      targetBody = Kerbin
      lat = -4.85083
      lon = 21.75
      //alt = 65.2
    }
    VESSEL
    {
      name = SkyFy TV Receiver 2
      craftURL = RealCareer/Vessels/CP2_1_1_TV_station.craft
      flagURL = Squad/Flags/default
      vesselType = Base // Unknown
      owned = true // selectable/flyable unless docked -> You need to target the satellite
      targetBody = Kerbin
      lat = -2.305
      lon = 23.5
      //alt = 65.2
    }
    VESSEL
    {
      name = SkyFy TV Receiver 3
      craftURL = RealCareer/Vessels/CP2_1_1_TV_station.craft
      flagURL = Squad/Flags/default
      vesselType = Base // Unknown
      owned = true // selectable/flyable unless docked -> You need to target the satellite
      targetBody = Kerbin
      lat = -2.718
      lon = 21.3833
      //alt = 65.2
    }
  }
  PARAMETER
  {
    name = group_alt_part
    type = VesselParameterGroup
    duration = 6h
    define = vessel_CP2_1_1_TV_satellite
    dissassociateVesselsOnContractCompletion = false // The license contract should be able to find it again
    dissassociateVesselsOnContractFailure = true
    //dissassociateVesselsOnContractCompletion = true
    //dissassociateVesselsOnContractFailure = true
    //hideVesselName = true
    
    PARAMETER
    {
      name = need_part
      type = PartValidation
      part = RTLongDish1
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_tv_station
      type = VesselConnectivity
      vessel = SkyFy TV Station
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_receiver_1
      type = VesselConnectivity
      vessel = SkyFy TV Receiver 1
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_receiver_2
      type = VesselConnectivity
      vessel = SkyFy TV Receiver 2
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = connected_to_receiver_3
      type = VesselConnectivity
      vessel = SkyFy TV Receiver 3
      hasConnectivity = true
      disableOnStateChange = false //  Need to keep it until the end
    }
  }
  
  REQUIREMENT
  {
    name = completed_cp1_7_4
    type = CompleteContract
    contractType = CP1_7_4
  }
  REQUIREMENT
  {
    name = tech_researched
    type = TechResearched
    tech = electrics
  }
}
