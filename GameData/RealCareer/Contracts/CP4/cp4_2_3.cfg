CONTRACT_TYPE
{
  name = CP4_2_3
  title = CP4.2.3 - Doing science
  group = CP4
  sortKey = CP4_2_3
  agent = SpaceK_CP4
  
  description = You've set up communication with Minmus, now we can send a probe that can do scientific experiments in orbit around Minmus.

  // Optional
  notes = There are various kind of scientific experiments one can do. Atleast do some material experiments, because people want to know what effect Minmus has on materials. Note: one can send a probe that returns to Kerbin which will result in more science, or one can send a probe that transmits its results. Also, don't forget there is a high and low altitude orbit.

  // The contract synopsis appears in bold.
  synopsis = Send a science probe to Minmus.

  completedMessage = Congratulations. Now we know more about Minmus.

  // Contract min/max expiry in days. If both are set to 0.0, it will result in a contract that never expires.
  // Default = 5.0 and 100.0 days, respectively
  minExpiry = 0.0
  maxExpiry = 0.0
  // Contract deadline in days.  Default is no deadline.
  deadline = 25

  // Controls for whether a contract can be declined or cancelled, default is true for both
  cancellable = false
  declinable = false

  // Prestige.
  //     Trivial
  //     Significant
  //     Exceptional
  prestige = Trivial

  // Target Celestial body
  // Default = null (no celestial body)
  targetBody = Minmus

  // The maximum number of times this contract type can be completed (0 being unlimited).
  // Default = 0
  maxCompletions = 1

  // The maximum instances of this contract that can be active at one time. Default = 4 (unless maxCompletions is set).
  maxSimultaneous = 1

  // Contract rewards.  Note that advanceFunds are automatically added to the failureFunds.
  rewardScience = 0.0
  rewardReputation = 5.0
  rewardFunds = 0.0
  failureReputation = 10.0
  failureFunds = 0.0
  advanceFunds = 0.0
  
  PARAMETER
  {
    name = CollectScience
    type = CollectScience
    targetBody = Minmus

    // Specifies the situation under which science should be collected.
    //     SrfLanded
    //     SrfSplashed
    //     FlyingLow
    //     FlyingHigh
    //     InSpaceLow
    //     InSpaceHigh
    situation = InSpaceLow

    // Specifies where the experiment should take place.
    //     Surface
    //     Space
    location = Space

    // Specifies the experiment to be run, can be any valid experiment in stock KSP or added by mods.
    //     asteroidSample
    //     atmosphereAnalysis
    //     barometerScan
    //     crewReport
    //     evaReport
    //     gravityScan
    //     mobileMaterialsLab
    //     magnetometer
    //     mysteryGoo
    //     seismicScan
    //     surfaceSample
    //     temperatureScan
    experiment = mobileMaterialsLab

    // The method for which the science must be recovered.  Note the Ideal
    // recovery method is special - it will automatically change to either
    // Recover or RecoverOrTransmit, depending whether the experiment can have
    // all its science recovered through transmission.
    //
    // Type:      ScienceRecoveryMethod
    // Required:  No
    // Values:
    //     None
    //     Recover
    //     Transmit
    //     RecoverOrTransmit
    //     Ideal
    //recoveryMethod = Recover
  }
  PARAMETER
  {
    name = CollectScience
    type = CollectScience
    targetBody = Minmus

    // Specifies the situation under which science should be collected.
    //     SrfLanded
    //     SrfSplashed
    //     FlyingLow
    //     FlyingHigh
    //     InSpaceLow
    //     InSpaceHigh
    situation = InSpaceHigh

    // Specifies where the experiment should take place.
    //     Surface
    //     Space
    location = Space

    // Specifies the experiment to be run, can be any valid experiment in stock KSP or added by mods.
    //     asteroidSample
    //     atmosphereAnalysis
    //     barometerScan
    //     crewReport
    //     evaReport
    //     gravityScan
    //     mobileMaterialsLab
    //     magnetometer
    //     mysteryGoo
    //     seismicScan
    //     surfaceSample
    //     temperatureScan
    experiment = mobileMaterialsLab

    // The method for which the science must be recovered.  Note the Ideal
    // recovery method is special - it will automatically change to either
    // Recover or RecoverOrTransmit, depending whether the experiment can have
    // all its science recovered through transmission.
    //
    // Type:      ScienceRecoveryMethod
    // Required:  No
    // Values:
    //     None
    //     Recover
    //     Transmit
    //     RecoverOrTransmit
    //     Ideal
    //recoveryMethod = Recover
  }
  
  REQUIREMENT
  {
    name = completed_cp4_2_2
    type = CompleteContract
    contractType = CP4_2_2
  }
  REQUIREMENT
  {
    name = tech_researched
    type = TechResearched
    tech = experimentalScience
  }
}
