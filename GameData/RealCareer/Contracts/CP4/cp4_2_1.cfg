CONTRACT_TYPE
{
  name = CP4_2_1
  title = CP4.2.1 - Communication with Minmus part 1
  group = CP4
  sortKey = CP4_2_1
  agent = SpaceK_CP4
  
  description = The goal of going to space is to find out what's out there. We've established communication with Mün, next up is the snowball Minmus.

  // Optional
  notes = To continuously have a connection with another planet, you'll need two satelites (or more) on Kerbin, one on each side of the planet, such that Kerbin never shadows the connection. The orbit of the two satelites can be anything, as long as they are equal (orbital period) and on opposite sides of Kerbin. Note: Did you add an extra disch when launching the communication satelites for Mün?
  
  // The contract synopsis appears in bold.
  synopsis = Send two satelites up that can reach Minmus.

  completedMessage = Congratulations. Next, we need to send satelites to Minus.

  // Contract min/max expiry in days. If both are set to 0.0, it will result in a contract that never expires.
  // Default = 5.0 and 100.0 days, respectively
  minExpiry = 0.0
  maxExpiry = 0.0
  // Contract deadline in days.  Default is no deadline.
  deadline = 10

  // Controls for whether a contract can be declined or cancelled, default is true for both
  cancellable = false
  declinable = false

  // Prestige.
  //     Trivial
  //     Significant
  //     Exceptional
  prestige = Trivial

  // Target Celestial body
  // Default = null (no celestial body)
  targetBody = Kerbin

  // The maximum number of times this contract type can be completed (0 being unlimited).
  // Default = 0
  maxCompletions = 1

  // The maximum instances of this contract that can be active at one time. Default = 4 (unless maxCompletions is set).
  maxSimultaneous = 1

  // Contract rewards.  Note that advanceFunds are automatically added to the failureFunds.
  rewardScience = 0.0
  rewardReputation = 1.0
  rewardFunds = 0.0
  failureReputation = 5.0
  failureFunds = 0.0
  advanceFunds = 0.0
  
  PARAMETER
  {
    name = group_alt_part
    type = VesselParameterGroup
    duration = 1d
    define = vessel_CP4_2_1
    
    PARAMETER:NEEDS[RemoteTech]
    {
      name = CelestialBodyCoverage
      type = CelestialBodyCoverage
      targetBody = Minmus
      // The percentage (0.0 to 1.0) of communication coverage that is needed to meet the contract parameter.
      coverage = 0.45
      disableOnStateChange = False
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = KSCConnectivity
      type = KSCConnectivity
      hasConnectivity = true
      disableOnStateChange = False
    }
  }
  
  REQUIREMENT
  {
    name = completed_cp4_1_2
    type = CompleteContract
    contractType = CP4_1_2
  }
}
