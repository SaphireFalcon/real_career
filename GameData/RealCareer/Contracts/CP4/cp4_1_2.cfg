CONTRACT_TYPE
{
  name = CP4_1_2
  title = CP4.1.2 - Communication with Mün part 2
  group = CP4
  sortKey = CP4_1_2
  agent = SpaceK_CP4
  
  description = You sent up satelites that cover Mün, now send satelites that receive the signal and cover the whole moon.

  // Optional
  notes = There are a few ways to bring these satelites to Mün, manned and unmanned. In the latter case, you can take the risk to keep communication or program what the rocket has to do. The other challenge is how to get the satelites there, you'll need at least three, most likely you don't have discovered the parts to create a rocket that can bring all satelites in one go. Note: In order to program the actions of the rocket, you can use a mod like kOS. 

  // The contract synopsis appears in bold.
  synopsis = Send communication satelites to Mün.

  completedMessage = Congratulations. Now we can communicate with anybody on Mün.

  // Contract min/max expiry in days. If both are set to 0.0, it will result in a contract that never expires.
  // Default = 5.0 and 100.0 days, respectively
  minExpiry = 0.0
  maxExpiry = 0.0
  // Contract deadline in days.  Default is no deadline.
  deadline = 25

  // Controls for whether a contract can be declined or cancelled, default is true for both
  cancellable = false
  declinable = false

  // Prestige.
  //     Trivial
  //     Significant
  //     Exceptional
  prestige = Trivial

  // Target Celestial body
  // Default = null (no celestial body)
  targetBody = Mun

  // The maximum number of times this contract type can be completed (0 being unlimited).
  // Default = 0
  maxCompletions = 1

  // The maximum instances of this contract that can be active at one time. Default = 4 (unless maxCompletions is set).
  maxSimultaneous = 1

  // Contract rewards.  Note that advanceFunds are automatically added to the failureFunds.
  rewardScience = 0.0
  rewardReputation = 5.0
  rewardFunds = 0.0
  failureReputation = 10.0
  failureFunds = 0.0
  advanceFunds = 0.0
  
  PARAMETER
  {
    name = group_alt_part
    type = VesselParameterGroup
    duration = 1d
    define = vessel_CP4_1_2
    
    PARAMETER:NEEDS[RemoteTech]
    {
      name = CelestialBodyCoverage
      type = CelestialBodyCoverage
      targetBody = Mun
      // The percentage (0.0 to 1.0) of communication coverage that is needed to meet the contract parameter.
      coverage = 0.95
      disableOnStateChange = False
    }
    PARAMETER:NEEDS[RemoteTech]
    {
      name = KSCConnectivity
      type = KSCConnectivity
      hasConnectivity = true
      disableOnStateChange = False
    }
  }
  
  REQUIREMENT
  {
    name = completed_cp4_1_1
    type = CompleteContract
    contractType = CP4_1_1
  }
}
