CONTRACT_TYPE
{
  name = CP4_1_4
  title = CP4.1.4 - Scanning M端n
  group = CP4
  sortKey = CP4_1_4
  agent = SpaceK_CP4
  
  description = Your boss Kelon Tusk doesn't want to risk landing on the M端n before knowing what the surfac structure is like. To find this out, we need to scan the surface with some of the scannners we have used before to scan Kerbin.

  // Optional
  notes = To understand the surface one needs at least a Altimeter, Biome, and Resource scan. Note: one can send one or more satelites. Also, make note of the (very) slow rotation speed of the moon.

  // The contract synopsis appears in bold.
  synopsis = Scan the surface of M端n.

  completedMessage = Congratulations. Now we know more about M端n. Don't forget to get science from the scanner.

  // Contract min/max expiry in days. If both are set to 0.0, it will result in a contract that never expires.
  // Default = 5.0 and 100.0 days, respectively
  minExpiry = 0.0
  maxExpiry = 0.0
  // Contract deadline in days. Default is no deadline.

  // Controls for whether a contract can be declined or cancelled, default is true for both
  cancellable = false
  declinable = false

  // Prestige.
  //     Trivial
  //     Significant
  //     Exceptional
  prestige = Significant

  // Target Celestial body
  // Default = null (no celestial body)
  targetBody = Mun

  // The maximum number of times this contract type can be completed (0 being unlimited).
  // Default = 0
  maxCompletions = 1

  // The maximum instances of this contract that can be active at one time. Default = 4 (unless maxCompletions is set).
  maxSimultaneous = 1

  // Contract rewards.  Note that advanceFunds are automatically added to the failureFunds.
  rewardScience = 0.0
  rewardReputation = 5.0
  rewardFunds = 0.0
  failureReputation = 10.0
  failureFunds = 0.0
  advanceFunds = 0.0
  
  PARAMETER:NEEDS[SCANsat]
  {
    name = scansat_coverage
    type = SCANsatCoverage
    coverage = 95.0
    // The type of scan to perform.
    //     AltimetryHiRes
    //     AltimetryLoRes
    //     Anomaly
    //     AnomalyDetail
    //     Biome
    //     ResourceHiRes
    //     ResourceLoRes
    //     VisualHiRes
    //     VisualLoRes
    scanType = AltimetryLoRes
  }
  PARAMETER:NEEDS[SCANsat]
  {
    name = scansat_coverage
    type = SCANsatCoverage
    coverage = 95.0
    // The type of scan to perform.
    //     AltimetryHiRes
    //     AltimetryLoRes
    //     Anomaly
    //     AnomalyDetail
    //     Biome
    //     ResourceHiRes
    //     ResourceLoRes
    //     VisualHiRes
    //     VisualLoRes
    scanType = Biome
  }
  PARAMETER:NEEDS[SCANsat]
  {
    name = scansat_coverage
    type = SCANsatCoverage
    coverage = 95.0
    // The type of scan to perform.
    //     AltimetryHiRes
    //     AltimetryLoRes
    //     Anomaly
    //     AnomalyDetail
    //     Biome
    //     ResourceHiRes
    //     ResourceLoRes
    //     VisualHiRes
    //     VisualLoRes
    scanType = ResourceLoRes
  }
  
  REQUIREMENT
  {
    name = completed_cp4_1_3
    type = CompleteContract
    contractType = CP4_1_3
  }
  REQUIREMENT
  {
    name = tech_researched
    type = TechResearched
    tech = scienceTech
  }
}
