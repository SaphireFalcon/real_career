CONTRACT_TYPE
{
  name = CP3_2_1
  title = CP3.2.1 - launch pod into space
  group = CP3
  sortKey = CP3_2_1
  agent = SpaceK_CP3
  
  description = Your engineers are happy, it looks like that the pod should be able to return safely from space. Next, launch the pod into space and test if it is airtight, so don't launch too high.

  // Optional
  notes = Launch the pod into space.

  // The contract synopsis appears in bold.
  synopsis = Launch the pod into space.

  completedMessage = Congratulations, the pod is airtight.

  // Contract min/max expiry in days. If both are set to 0.0, it will result in a contract that never expires.
  // Default = 5.0 and 100.0 days, respectively
  minExpiry = 0.0
  maxExpiry = 0.0
  // Contract deadline in days.  Default is no deadline.
  deadline = 10

  // Controls for whether a contract can be declined or cancelled, default is true for both
  cancellable = false
  declinable = false

  // Prestige.
  //     Trivial
  //     Significant
  //     Exceptional
  prestige = Trivial

  // Target Celestial body
  // Default = null (no celestial body)
  targetBody = Kerbin

  // The maximum number of times this contract type can be completed (0 being unlimited).
  // Default = 0
  maxCompletions = 1

  // The maximum instances of this contract that can be active at one time. Default = 4 (unless maxCompletions is set).
  maxSimultaneous = 1

  // Contract rewards.  Note that advanceFunds are automatically added to the failureFunds.
  rewardScience = 0.0
  rewardReputation = 1.0
  rewardFunds = 15000.0
  failureReputation = 5.0
  failureFunds = 0.0
  advanceFunds = 25000.0
  
  PARAMETER
  {
    name = need_part
    type = PartValidation
    part = mk1pod_v2
  }
  PARAMETER
  {
    name = has_crew
    type = HasCrew

    // The type of trait required.  Valid values are:
    //     Pilot
    //     Engineer
    //     Scientist
    trait = Pilot
    minCrew = 1
  }
  PARAMETER
  {
    name = reach_alt
    type = ReachState
    minAltitude = 70000
    maxAltitude = 80000
    disableOnStateChange = true
  }
  PARAMETER
  {
    name = recover_vessel
    type = RecoverVessel
  }
  
  REQUIREMENT
  {
    name = completed_cp3_1_3
    type = CompleteContract
    contractType = CP3_1_3
  }
}
