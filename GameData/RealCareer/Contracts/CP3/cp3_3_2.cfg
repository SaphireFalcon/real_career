CONTRACT_TYPE:NEEDS[StationPartsExpansionRedux&KIS&KAS]
{
  name = CP3_3_2_SPER
  title = CP3.3.2 - Create a (tiny) space station
  group = CP3
  sortKey = CP3_3_2_SPER
  agent = SpaceK_CP3
  
  description = Your boss is extremely happy. You showed that Kerbals can go to space and stay there. Though, staying in space is rather challenging. Therefore, your engineers designed some parts that can be used to create the first steps into building a space station.

  // Optional
  notes = Build a space station in space with at least the following parts. Maybe you'll need to launch it in parts and assemble in space. Don't forget supplies, electricity etc. Note: You'll need the Station Parts Expansion Redux mod. This mod will add a lot of cool parts to build space stations and bases. Depending your science level you'll need to launch the station in parts and assemble it in space. Then the KIS and KAS mods will help you a lot. Maybe you'll need to update the KIS max weight and distance settings. Alternatively, you could use the USI Konstruction mod, that has special docking nodes, that can be used to assemble parts.

  // The contract synopsis appears in bold.
  synopsis = Build a tiny space station

  completedMessage = Congratulations! Now we can create a permanent presence in space.

  // Contract min/max expiry in days. If both are set to 0.0, it will result in a contract that never expires.
  // Default = 5.0 and 100.0 days, respectively
  minExpiry = 0.0
  maxExpiry = 0.0
  // Contract deadline in days.  Default is no deadline.
  //deadline = 100

  // Controls for whether a contract can be declined or cancelled, default is true for both
  cancellable = false
  declinable = false

  // Prestige.
  //     Trivial
  //     Significant
  //     Exceptional
  prestige = Significant

  // Target Celestial body
  // Default = null (no celestial body)
  targetBody = Kerbin

  // The maximum number of times this contract type can be completed (0 being unlimited).
  // Default = 0
  maxCompletions = 1

  // The maximum instances of this contract that can be active at one time. Default = 4 (unless maxCompletions is set).
  maxSimultaneous = 1

  // Contract rewards.  Note that advanceFunds are automatically added to the failureFunds.
  rewardScience = 8.0
  rewardReputation = 4.0
  rewardFunds = 40000.0
  failureReputation = 8.0
  failureFunds = 0.0
  advanceFunds = 40000.0
  
  PARAMETER
  {
    name = group_alt_part
    type = VesselParameterGroup
    duration = 42d
    define = vessel_CP3_3_2
    
    PARAMETER
    {
      name = need_part
      type = PartValidation
      part = sspx-core-125-1
    }
    PARAMETER
    {
      name = need_part
      type = PartValidation
      part = sspx-habitation-125-1
    }
    PARAMETER
    {
      name = need_part
      type = PartValidation
      part = sspx-utility-125-1
    }
    PARAMETER
    {
      name = need_part
      type = PartValidation
      part = sspx-airlock-125-1
    }
    PARAMETER
    {
      name = need_part
      type = PartValidation
      part = dockingPort2
    }
    PARAMETER
    {
      name = has_crew
      type = HasCrew

      // The type of trait required.  Valid values are:
      //     Pilot
      //     Engineer
      //     Scientist
      trait = Pilot
      minCrew = 1
    }
    PARAMETER
    {
      name = has_crew
      type = HasCrew

      // The type of trait required.  Valid values are:
      //     Pilot
      //     Engineer
      //     Scientist
      trait = Engineer
      minCrew = 1
    }
    PARAMETER
    {
      name = reach_alt
      type = ReachState
      situation = ORBITING
      minAltitude = 70000
      maxAltitude = 150000
      disableOnStateChange = true
    }
  }
  
  REQUIREMENT
  {
    name = completed_cp3_3_1
    type = CompleteContract
    contractType = CP3_3_1
  }
}
