CONTRACT_TYPE
{
  name = CP3_3_4
  title = CP3.3.4 - Return to Kerbin
  group = CP3
  sortKey = CP3_3_4
  agent = SpaceK_CP3
  
  description = Your Kerbonauts are getting home sick. Also your scientists want them to return to find out what the effects are of an extended stay in space.

  // Optional
  notes = Return the Kerbonauts 

  // The contract synopsis appears in bold.
  synopsis = Bring supplies to your space station

  completedMessage = Congratulations! Your Kerbonauts won't starve in space.

  // Contract min/max expiry in days. If both are set to 0.0, it will result in a contract that never expires.
  // Default = 5.0 and 100.0 days, respectively
  minExpiry = 0.0
  maxExpiry = 0.0
  // Contract deadline in days.  Default is no deadline.
  //deadline = 100

  // Controls for whether a contract can be declined or cancelled, default is true for both
  cancellable = false
  declinable = false

  // Prestige.
  //     Trivial
  //     Significant
  //     Exceptional
  prestige = Trivial

  // Target Celestial body
  // Default = null (no celestial body)
  targetBody = Kerbin

  // The maximum number of times this contract type can be completed (0 being unlimited).
  // Default = 0
  maxCompletions = 1

  // The maximum instances of this contract that can be active at one time. Default = 4 (unless maxCompletions is set).
  maxSimultaneous = 1

  // Contract rewards.  Note that advanceFunds are automatically added to the failureFunds.
  rewardScience = 0.0
  rewardReputation = 1.0
  rewardFunds = 40000.0
  failureReputation = 10.0
  failureFunds = 0.0
  advanceFunds = 60000.0
  
  PARAMETER
  {
    name = group_recovery_vessel
    type = VesselParameterGroup
    define = vessel_CP3_3_4
    
    PARAMETER
    {
      name = NewVessel
      type = NewVessel
    }
    PARAMETER
    {
      name = reach_orbit
      type = Orbit
      minApA = 70000
      minPeA = 70000
    }
    PARAMETER
    {
      name = Docking
      type = Docking
      vessel = vessel_CP3_3_2
    }
  }
  PARAMETER
  {
    name = group_recovery_vessel
    type = VesselParameterGroup
    define = vessel_CP3_3_4
  
    PARAMETER
    {
      name = has_crew
      type = HasCrew

      // The type of trait required.  Valid values are:
      //     Pilot
      //     Engineer
      //     Scientist
      trait = Pilot
      minCrew = 1
      disableOnStateChange = false
    }
    PARAMETER
    {
      name = has_crew
      type = HasCrew

      // The type of trait required.  Valid values are:
      //     Pilot
      //     Engineer
      //     Scientist
      trait = Engineer
      minCrew = 1
      disableOnStateChange = false
    }
    PARAMETER
    {
      name = recover_vessel_with_crew
      type = RecoverVessel
    }
  }
  
  REQUIREMENT
  {
    name = completed_cp3_3_3
    type = CompleteContract
    contractType = CP3_3_3_USI
  }
}
