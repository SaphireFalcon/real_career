CONTRACT_TYPE
{
  name = CP3_1_3
  title = CP3.1.3 - launch pod high altitude
  group = CP3
  sortKey = CP3_1_3
  agent = SpaceK_CP3
  
  description = Your engineers are happy, the test with the parachute returned the pod safely. Next, launch the pod a bit higher and test the parachute(s) to land safely.

  // Optional
  notes = Launch the pod to a higher altitude and test the drogue chutes to slow down the pod sufficient to deploy the parachute. Note: You can gain more science by also getting an EVA report after landing.

  // The contract synopsis appears in bold.
  synopsis = Test the Mk12-R.

  completedMessage = Congratulations, the pod landed safely.

  // Contract min/max expiry in days. If both are set to 0.0, it will result in a contract that never expires.
  // Default = 5.0 and 100.0 days, respectively
  minExpiry = 0.0
  maxExpiry = 0.0
  // Contract deadline in days.  Default is no deadline.
  deadline = 10

  // Controls for whether a contract can be declined or cancelled, default is true for both
  cancellable = false
  declinable = false

  // Prestige.
  //     Trivial
  //     Significant
  //     Exceptional
  prestige = Trivial

  // Target Celestial body
  // Default = null (no celestial body)
  targetBody = Kerbin

  // The maximum number of times this contract type can be completed (0 being unlimited).
  // Default = 0
  maxCompletions = 1
  //  ToDo: Make it repeatable or make multiple contract copies
  //  ToDo: figure out how to make sure this contract is not non-stop repeated

  // The maximum instances of this contract that can be active at one time. Default = 4 (unless maxCompletions is set).
  maxSimultaneous = 1

  // Contract rewards.  Note that advanceFunds are automatically added to the failureFunds.
  rewardScience = 0.0
  rewardReputation = 1.0
  rewardFunds = 10000.0
  failureReputation = 5.0
  failureFunds = 0.0
  advanceFunds = 20000.0
  
  PARAMETER
  {
    name = need_part
    type = PartValidation
    part = mk1pod_v2
  }
  PARAMETER
  {
    name = need_part
    type = PartValidation
    part = radialDrogue
  }
  PARAMETER
  {
    name = has_crew
    type = HasCrew

    // The type of trait required.  Valid values are:
    //     Pilot
    //     Engineer
    //     Scientist
    trait = Pilot
    minCrew = 1
  }
  PARAMETER
  {
    name = reach_alt
    type = ReachState
    minAltitude = 18000
    maxAltitude = 70000
    disableOnStateChange = true
  }
  PARAMETER
  {
    name = recover_vessel
    type = RecoverVessel
  }
  
  REQUIREMENT
  {
    name = completed_cp3_1_2
    type = CompleteContract
    contractType = CP3_1_2
  }
}
