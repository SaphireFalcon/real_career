CONTRACT_TYPE
{
  name = CP3_1_1
  title = CP3.1.1 - Test launch pod
  group = CP3
  sortKey = CP3_1_1
  agent = SpaceK_CP3
  
  description = Your boss, Kelon Tusk is happy with the progress you made so far. He thinks it is time to bring some Kerbonauts into space. Your engineers have been working hard to build a pod that can be launched into space and return savely back.

  // Optional
  notes = The pod has to be tested before launch. Put it on the launchpad and take a crew report. Note: You can also make EVA reports (if the astronauts complex is upgraded).

  // The contract synopsis appears in bold.
  synopsis = Test the Mk1-pod.

  completedMessage = Congratulations, seems like the pod didn't fall apart bringing to the launchpad.

  // Contract min/max expiry in days. If both are set to 0.0, it will result in a contract that never expires.
  // Default = 5.0 and 100.0 days, respectively
  minExpiry = 0.0
  maxExpiry = 0.0
  // Contract deadline in days.  Default is no deadline.
  deadline = 10

  // Controls for whether a contract can be declined or cancelled, default is true for both
  cancellable = false
  declinable = false

  // Prestige.
  //     Trivial
  //     Significant
  //     Exceptional
  prestige = Trivial

  // Target Celestial body
  // Default = null (no celestial body)
  targetBody = Kerbin

  // The maximum number of times this contract type can be completed (0 being unlimited).
  // Default = 0
  maxCompletions = 1

  // The maximum instances of this contract that can be active at one time. Default = 4 (unless maxCompletions is set).
  maxSimultaneous = 1

  // Contract rewards.  Note that advanceFunds are automatically added to the failureFunds.
  rewardScience = 0.0
  rewardReputation = 1.0
  rewardFunds = 5000.0
  failureReputation = 5.0
  failureFunds = 0.0
  advanceFunds = 15000.0
  
  PARAMETER
  {
    name = need_part
    type = PartValidation
    part = mk1pod_v2
  }
  PARAMETER
  {
    name = has_crew
    type = HasCrew

    // The type of trait required.  Valid values are:
    //     Pilot
    //     Engineer
    //     Scientist
    trait = Pilot
    minCrew = 1
  }
  PARAMETER
  {
    name = recover_vessel
    type = RecoverVessel
  }
  
  REQUIREMENT
  {
    name = completed_cp1_9_1
    type = CompleteContract
    contractType = CP1_9_1
  }
  REQUIREMENT
  {
    name = tech_researched
    type = TechResearched
    tech = spaceExploration
  }
}
